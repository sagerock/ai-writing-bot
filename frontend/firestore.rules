rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Helper function to check if user is an admin
    function isAdmin() {
      return request.auth != null && 
             request.auth.token.admin == true;
    }
    
    // Users collection - users can access their own document, admins can access all
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow read, write: if isAdmin();
      
      // User's archives subcollection
      match /archives/{archiveId} {
        allow read, write, delete: if isOwner(userId);
        allow read: if isAdmin();
      }
      
      // User's documents subcollection  
      match /documents/{documentId} {
        allow read, write, delete: if isOwner(userId);
        allow read: if isAdmin();
      }
      
      // User's conversations subcollection
      match /conversations/{conversationId} {
        allow read, write, delete: if isOwner(userId);
        allow read: if isAdmin();
      }
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}